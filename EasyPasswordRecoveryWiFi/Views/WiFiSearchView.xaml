<Window x:Class="EasyPasswordRecoveryWiFi.Views.WiFiSearchView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:cal="http://www.caliburnproject.org"
        mc:Ignorable="d"
        Icon="/Resources/Icons/WifiLogo128x128.ico"
        WindowStartupLocation="CenterOwner"
        Title="WiFi Finder" 
        Height="700" 
        Width="650">
	<Grid>
		<Grid.Style>
			<Style TargetType="{x:Type Grid}">
				<Setter Property="IsEnabled" Value="True" />
				<Style.Triggers>
                    <DataTrigger Binding="{Binding BusyStateManager.IsBusy}" Value="True">
						<Setter Property="IsEnabled" Value="False" />
					</DataTrigger>
				</Style.Triggers>
			</Style>
		</Grid.Style>
		<Grid.RowDefinitions>
			<RowDefinition Height="*"></RowDefinition>
			<RowDefinition Height="Auto"></RowDefinition>
		</Grid.RowDefinitions>
		<GroupBox Margin="5"
                  BorderBrush="Blue"
                  Header="WiFi Finder"
                  BorderThickness="2"
                  FontSize="16" 
                  Grid.Row="0">
			<GroupBox.Style>
				<Style TargetType="{x:Type GroupBox}">
					<Setter Property="IsEnabled" Value="True" />
					<Style.Triggers>
                        <DataTrigger Binding="{Binding BusyStateManager.IsBusy}" Value="True">
							<Setter Property="IsEnabled" Value="False" />
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</GroupBox.Style>
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto"></RowDefinition>
					<RowDefinition Height="*"></RowDefinition>
					<RowDefinition Height="40"></RowDefinition>
				</Grid.RowDefinitions>
				<GroupBox Grid.Row="0"
                          Margin="5"
                          Style="{x:Null}"
                          BorderBrush="Blue"
                          Header="WiFi Interfaces"
                          BorderThickness="1">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<Label Grid.Column="0" Margin="5">Selected Interface:</Label>
						<ComboBox Grid.Column="1" 
                                  Margin="5"
                                  ToolTip="Select interface for which you want to see access points."                                  
                                  ItemsSource="{Binding Interfaces, Mode=OneWay}" 
                                  DisplayMemberPath="Description"  
                                  SelectedItem="{Binding SelectedInterface, Mode=TwoWay}" />
					</Grid>
				</GroupBox>
				<GroupBox Grid.Row="1"
                          Margin="5"
                          Style="{x:Null}"
                          BorderBrush="Blue"
                          Header="Access Points"
                          BorderThickness="1">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto"></ColumnDefinition>
						</Grid.ColumnDefinitions>
						<DataGrid ToolTip="List of access points found on the selected interface."
                                  SelectedItem="{Binding Path=SelectedAccessPoint, Mode=TwoWay}"
                                  ItemsSource="{Binding WiFiAccessPointViewSource.View, Mode=OneWay}"
                                  AutoGenerateColumns="False"
                                  SelectionMode="Single"
                                  SelectionUnit="FullRow"
                                  Margin="5"
                                  IsReadOnly="True"
                                  CanUserSortColumns="True"
                                  AlternatingRowBackground="Lavender">
							<DataGrid.RowStyle>
								<Style TargetType="{x:Type DataGridRow}">
									<Style.Triggers>
										<DataTrigger Binding="{Binding IsConnected}" Value="True">
											<Setter Property="FontWeight" Value="Bold" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</DataGrid.RowStyle>
							<DataGrid.ContextMenu>
								<ContextMenu>
									<MenuItem ToolTip="Connect to selected access point."
                                              Header="Connect" 
                                              cal:Message.Attach="[Event Click] = [ConnectCmd()]">
									</MenuItem>
									<MenuItem ToolTip="Disconnect from interface." 
                                              Header="Disconnect" 
                                              cal:Message.Attach="[Event Click] = [DisconnectCmd()]">
									</MenuItem>
									<Separator/>
									<MenuItem ToolTip="Show access point and interface properties." 
                                              Header="Properties" 
                                              cal:Message.Attach="[Event Click] = [PropertiesCmd()]">
									</MenuItem>
								</ContextMenu>
							</DataGrid.ContextMenu>
							<DataGrid.Columns>
								<DataGridTextColumn Width="40*"
                                                    Binding="{Binding ProfileName, Mode=OneWay}"
                                                    Header="Profile Name"></DataGridTextColumn>
								<DataGridTextColumn Width="40*"
                                                    Binding="{Binding Ssid, Mode=OneWay}"
                                                    Header="Ssid"></DataGridTextColumn>
								<DataGridTextColumn Width="30*"
                                                    Binding="{Binding LinkQuality, Mode=OneWay}"
                                                    Header="Signal"></DataGridTextColumn>
								<DataGridTextColumn Width="40*"
                                                    Binding="{Binding Authentication, Mode=OneWay}"
                                                    Header="Authentication"></DataGridTextColumn>
								<DataGridTextColumn Width="40*"
                                                    Binding="{Binding Encryption, Mode=OneWay}"
                                                    Header="Encryption"></DataGridTextColumn>
							</DataGrid.Columns>
						</DataGrid>
						<StackPanel Grid.Column="2" Margin="0,5,5,0" >
							<Button Style="{x:Null}"
                                    Background="Transparent"
                                    BorderBrush="Transparent"
                                    ToolTip="Scan for access points on all interfaces."  
                                    Margin="0,2,0,0" 
                                    cal:Message.Attach="[Event Click] = [RefreshViewCmd()]" >
								<materialDesign:PackIcon Kind="Refresh" Height="30" Width="30" />
							</Button>
						</StackPanel>
					</Grid>
				</GroupBox>
				<StackPanel Grid.Row="2"
                            Orientation="Horizontal"
                            FlowDirection="RightToLeft">
					<Button ToolTip="Cancel selection."
                            Width="100"
                            Height="30"
                            IsCancel="true"
                            FontSize="14"
                            Margin="8,0"
                            VerticalAlignment="Center"
                            cal:Message.Attach="[Event Click] = [CancelCmd()]">
						<StackPanel HorizontalAlignment="Center" 
                                    VerticalAlignment="Center" 
                                    Orientation="Horizontal">
							<TextBlock Margin="5,0,0,0"
                                       VerticalAlignment="Center"
                                       TextWrapping="NoWrap"
                                       Text="Cancel"></TextBlock>
							<materialDesign:PackIcon Kind="Cancel" 
                                                     Height="16" 
                                                     Width="16" 
                                                     Margin="8,0,0,0"
                                                     VerticalAlignment="Center"/>
						</StackPanel>
					</Button>
					<Button ToolTip="Select access point."
                            Width="100"
                            Height="30"
                            IsDefault="true"
                            FontSize="14"
                            Margin="8,0"
                            VerticalAlignment="Center"
                            cal:Message.Attach="[Event Click] = [SelectCmd()]">
						<StackPanel HorizontalAlignment="Center" 
                                    VerticalAlignment="Center" 
                                    Orientation="Horizontal"
                                    FlowDirection="LeftToRight">
							<materialDesign:PackIcon Kind="Check" 
                                                     Height="16" 
                                                     Width="16" 
                                                     Margin="0,0,8,0"
                                                     VerticalAlignment="Center"/>
							<TextBlock Margin="5,0,0,0" 
                                       VerticalAlignment="Center"
                                       TextWrapping="NoWrap"
                                       Text="Select"></TextBlock>
						</StackPanel>
					</Button>
				</StackPanel>
			</Grid>
		</GroupBox>
		<!-- StatusBar displays info/errors to the user. -->
		<ContentControl Grid.Row="1" cal:View.Model="{Binding StatusBarBottom}"></ContentControl>
	</Grid>
</Window>
